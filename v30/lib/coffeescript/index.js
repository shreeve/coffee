// Generated by CoffeeScript 2.8.0

import * as CoffeeScript from './coffeescript';

import fs from 'fs';

import vm from 'vm';

export var compile = CoffeeScript.compile;

export var run = function(code, options = {}) {
  var compiled, ref;
  compiled = CoffeeScript.compile(code, {
    bare: true,
    ...options
  });
  return vm.runInThisContext((ref = compiled.js) != null ? ref : compiled);
};

export var evalCode = function(code, options = {}) {
  var compiled, ref, sandbox;
  if (!(code = code.trim())) {
    return;
  }
  sandbox = (ref = options.sandbox) != null ? ref : global;
  compiled = CoffeeScript.compile(code, {
    bare: true,
    ...options
  });
  if (sandbox === global) {
    return vm.runInThisContext(compiled);
  } else {
    return vm.runInContext(compiled, vm.createContext(sandbox));
  }
};

export var compileFile = function(filename, options = {}) {
  var source;
  source = fs.readFileSync(filename, 'utf8');
  return CoffeeScript.compile(source, {filename, ...options});
};

export var runFile = function(filename, options = {}) {
  var compiled, ref;
  compiled = compileFile(filename, options);
  return vm.runInThisContext((ref = compiled.js) != null ? ref : compiled);
};

export * from './coffeescript';

export {
  default
} from './coffeescript';
